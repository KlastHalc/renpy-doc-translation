# Japanese translation for renpy-doc
# Copyright (c) 2013 Rosetta Contributors and Canonical Ltd 2013
# This file is distributed under the same license as the renpy-doc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2013.
#
msgid ""
msgstr ""
"Project-Id-Version: renpy-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2018-05-23 20:10+0900\n"
"PO-Revision-Date: 2018-02-15 23:42+0900\n"
"Last-Translator: \n"
"Language-Team: Japanese <ja@li.org>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Launchpad-Export-Date: 2015-03-28 05:30+0000\n"
"X-Generator: Poedit 1.5.7\n"

#: ../../source/dialogue.rst:5
msgid "Dialogue and Narration"
msgstr "台詞とナレーション"

#: ../../source/dialogue.rst:7
msgid ""
"Text is fundamental to visual novels, and generally quite important to "
"storytelling-based games. This text may consist of dialogue labeled with the "
"character that is saying it, and narration, which does not have a speaker. "
"(For convenience, we will lump both dialogue and narration together as "
"dialogue, except where the differences are important.) It's also important "
"that the user be able to customize the look of dialogue to suit their game."
msgstr ""
"テキストはビジュアルノベルの基本であり、物語を中心としたゲームにとってとても"
"大切なものです。テキストには、それを話しているキャラクターで分類される台詞"
"と、話し手のいないナレーションがあります。(簡単のため、特に分ける必要がない限"
"り、台詞もナレーションも台詞で統一します。) また、台詞の外観はゲームに合わせ"
"てユーザーがカスタマイズできます。"

#: ../../source/dialogue.rst:15
msgid ""
"In Ren'Py, most dialogue is written using say statements. The look of "
"dialogue may be customized on a per-character basis by using Character "
"objects."
msgstr ""
"Ren'Py では、ほとんどの台詞は say ステートメントで書かれます。台詞の見た目は "
"Character オブジェクトを使ってキャラクター毎にカスタマイズできます。"

#: ../../source/dialogue.rst:22
msgid "Say Statement"
msgstr "say ステートメント"

#: ../../source/dialogue.rst:24
msgid ""
"The say statement is used for dialogue and narration. Since it's almost "
"always the most frequently used statement in Ren'Py scripts, the say "
"statement has a syntax that minimizes the overhead in writing it. Some "
"example say statements are::"
msgstr ""
"say ステートメントは、台詞やナレーションに使われます。これは Ren'Py スクリプ"
"トで最も多く使われるステートメントですから、say ステートメントの構文は最小限"
"の負荷で書けます。say ステートメントの例です。 ::"

#: ../../source/dialogue.rst:38
msgid ""
"The first form of the say statement consists of a string by itself. This "
"form is used for narration, with the narration being the contents of the "
"string."
msgstr ""
"say ステートメントの最初の形式は、1 つの文字列だけ構成されています。この形式"
"はナレーションに使われ、この文字列がナレーションの内容です"

#: ../../source/dialogue.rst:42
msgid ""
"The second form consists of two strings. The first string is the name of the "
"character who is speaking, and the second is the dialogue being spoken."
msgstr ""
"第二の形式は、2 つの文字列で構成されます。最初の文字列は話者の名前で、二番目"
"が話される台詞です。"

#: ../../source/dialogue.rst:46
msgid ""
"The third form consists of a simple expression followed by a string. The "
"simple expression should evaluate to either a string giving a character "
"name, or a Character object. In the latter case, the character object is "
"used to control how the dialogue is shown."
msgstr ""
"第三の形式は、単純式とその後の文字列で構成されます。ここでの単純式は、キャラ"
"クター名の文字列または Character オブジェクトであるべきです。後者では、その "
"Character オブジェクトが台詞の見た目の制御に使われます。"

#: ../../source/dialogue.rst:51
msgid ""
"The final form consists of a string and a with clause which has a "
"transition. In this case, the string is shown and a screen is shaken at the "
"same time."
msgstr ""
"最後の形式は文字列とトランジション付きの with 節で構成され、文字列の表示とス"
"クリーンの揺れが同時に起こります。"

#: ../../source/dialogue.rst:56
msgid ""
"Although the precise details of what a say statement does is controlled by "
"the character object used, the usual effect of a say statement is to display "
"dialogue on the screen until the user clicks to dismiss it, then to remove "
"that dialogue on the screen."
msgstr ""
"say ステートメントの詳細な動作は使われる Character オブジェクトによって制御さ"
"れますが、say ステートメントは通常、台詞をスクリーンに表示し、ユーザーがク"
"リックしたら台詞をスクリーンから取り除きます。"

#: ../../source/dialogue.rst:61
msgid ""
"Certain characters have special meaning to Ren'Py, and so can't be used in "
"dialogue strings. The ``{`` character begins a text tag, and the ``[`` "
"character begins a substitution. To use them in dialogue, double them. It "
"may also be necessary to precede a quote with a backslash to prevent it from "
"closing the string. For example::"
msgstr ""
"文字の中には Ren'Py で特別な意味を持ち、それゆえ台詞の文字列で使えないものが"
"あります。 ``{`` 文字はテキストタグを開始し、 ``[`` 文字は置換を開始します。"
"これらを台詞中で使うには、2 つ重ねてください。また、クオートが文字列を閉じて"
"しまうのを防ぐには、バックスラッシュを前置しなければなりません。例 ::"

#: ../../source/dialogue.rst:71
msgid "Defining Character Objects"
msgstr "Character オブジェクトの定義"

#: ../../source/dialogue.rst:73
msgid ""
"By creating a Character object and using it in a say statement, you can "
"customize the look (and to some extent, the behavior) of dialogue. "
"Characters are created by using the define statement to assign a Character "
"to a variable. For example::"
msgstr ""
"Character オブジェクトを作成し、これを say ステートメントで使うと、会話文の見"
"た目 (ある程度の動作も) を変更できます。キャラクターは、define ステートメント"
"を使って変数に Character を代入して作成できます。例 ::"

#: ../../source/dialogue.rst:82
msgid "Once this is done, the character can be used in a say statement::"
msgstr "これでそのキャラクターを say ステートメントで使えます::"

#: ../../source/dialogue.rst:86
#, fuzzy
msgid ""
"Character is a Python function that takes a large number of keyword "
"arguments. These keyword arguments control the behavior of the character."
msgstr ""
"Character は Python 関数で、多くのキーワード引数を取ります。これらのキーワー"
"ド引数は、キャラクターの動作を制御します。"

#: ../../source/dialogue.rst:90
msgid ""
"The define statement causes its expression to be evaluated, and assigned to "
"the supplied name. If not inside an init block, the define statement will "
"automatically be run with init priority 0."
msgstr ""
"define ステートメントはその単純式を評価し、与えられた名前に代入します。 init "
"ブロック内でなければ、 define ステートメントは自動的に優先度 0 の init で実行"
"されます。"

#: ../../source/dialogue.rst:97
msgid "Say with Image Attributes"
msgstr "画像属性を伴う say"

#: ../../source/dialogue.rst:99
msgid ""
"When a character is defined with an associated image tag, say statement "
"involving that character may have image attributes placed between the "
"character name and the second string."
msgstr ""
"キャラクターが画像タグを伴って定義されたとき、そのキャラクターを含む say ス"
"テートメントのキャラクター名と2番目の文字列の間に画像属性を入れられます。"

#: ../../source/dialogue.rst:103
msgid ""
"In this form, if an image with the given tag is showing, Ren'Py will issue a "
"show command involving the character tag and the attributes. If the image is "
"not shown, Ren'Py will store the attributes for use by side images, but will "
"not show an image."
msgstr ""
"この形式では、与えられたタグの画像が表示されていれば、Ren'Py はそのキャラク"
"ターのタグと属性を含む show コマンドを発します。その画像が表示されていなけれ"
"ば、Ren'Py はその画像属性をサイドイメージで使うためにプールしますが、画像の表"
"示はしません。"

#: ../../source/dialogue.rst:109 ../../source/dialogue.rst:192
#: ../../source/dialogue.rst:245
msgid "For example::"
msgstr "例 ::"

#: ../../source/dialogue.rst:120 ../../source/dialogue.rst:298
#: ../../source/dialogue.rst:321
msgid "is equivalent to::"
msgstr "これは以下と等価です。 ::"

#: ../../source/dialogue.rst:132
msgid ""
"To cause a transition to occur whenever the images are changed in this way, "
"set :var:`config.say_attribute_transition` to a transition."
msgstr ""
"画像がこのように変更される度にトランジションを起こすには、:var:`config."
"say_attribute_transition` にトランジションを設定してください。"

#: ../../source/dialogue.rst:137
msgid "Example Characters"
msgstr "キャラクターの例"

#: ../../source/dialogue.rst:139
msgid "Here are a few example characters::"
msgstr "キャラクターの例をいくつか挙げます::"

#: ../../source/dialogue.rst:148
msgid "Special Characters"
msgstr "特殊なキャラクター"

#: ../../source/dialogue.rst:150
msgid ""
"A few character names are defined by default, and are used automatically in "
"certain situations. Intentionally redefining these characters can change the "
"behavior of Ren'Py, but accidentally using them can be a problem."
msgstr ""
"デフォルトでいくつかのキャラクター名が定義されていて、特定の状況で自動的に使"
"われます。これらのキャラクターを意図的に再定義すれば Ren'Py の振る舞いを変え"
"られますが、間違えて使ってしまうと問題になりえます。"

#: ../../source/dialogue.rst:158
msgid "``adv``"
msgstr "``adv``"

#: ../../source/dialogue.rst:156
msgid ""
"The default kind of character used by Character. This sets up a character "
"such that one line is displayed on the screen at a time."
msgstr ""
"Character によって使われるデフォルトのキャラクターの kind です。これは、画面"
"に一度に一行ずつ表示されるようなキャラクターを設定します。"

#: ../../source/dialogue.rst:163
msgid "``nvl``"
msgstr "``nvl``"

#: ../../source/dialogue.rst:161
msgid ""
"A kind of Character that causes dialogue to be displayed in :ref:`NVL-mode`, "
"with multiple lines of text on the screen at once."
msgstr ""
"台詞が :ref:`NVL-mode` で表示されるキャラクターの kind です。画面に一度に複数"
"行表示されます。"

#: ../../source/dialogue.rst:167
msgid "``narrator``"
msgstr "``narrator``"

#: ../../source/dialogue.rst:166
msgid ""
"The character that's used to display narration, by say statements without a "
"character name."
msgstr ""
"キャラクター名の無い say ステートメントにより、ナレーションを表示するのに使わ"
"れるキャラクターです。"

#: ../../source/dialogue.rst:173
msgid "``name_only``"
msgstr "``name_only``"

#: ../../source/dialogue.rst:170
msgid ""
"A character that is used to display dialogue in which the character name is "
"given as a string. This character is copied to a new character with the "
"given name, and then that new character is used to display the dialogue."
msgstr ""
"キャラクター名が文字列で与えられた台詞を表示するのに使われるキャラクターで"
"す。このキャラクターは与えられた名前の新しいキャラクターにコピーされ、台詞を"
"表示するのにその新しいキャラクターが使われます。"

#: ../../source/dialogue.rst:177
msgid "``centered``"
msgstr "``centered``"

#: ../../source/dialogue.rst:176
msgid ""
"A character that causes what it says to be displayed centered, in the middle "
"of the screen, outside of any window."
msgstr "台詞をウィンドウの外、画面の中央に表示するキャラクターです。"

#: ../../source/dialogue.rst:182
msgid "``vcentered``"
msgstr "``vcentered``"

#: ../../source/dialogue.rst:180
msgid ""
"A character that causes what it says to be displayed centered in vertically "
"oriented text, in the middle of the screen, outside of any window."
msgstr "台詞を画面の中央、ウィンドウの外に縦書きで表示するキャラクターです。"

#: ../../source/dialogue.rst:190
msgid "``extend``"
msgstr "``extend``"

#: ../../source/dialogue.rst:185
msgid ""
"A character that causes the last character to speak to say a line of "
"dialogue consisting of the last line of dialogue spoken, \"{fast}\", and the "
"dialogue given to extend. This can be used to have the screen change over "
"the course of dialogue."
msgstr ""
"最後に台詞を話したキャラクターにその台詞の後に「 {fast} 」タグと extend に与"
"えられた台詞をつなげて構築された台詞を話させます。これは台詞中にスクリーンを"
"変化させるために使用出来ます。"

#: ../../source/dialogue.rst:190
msgid "Extend is aware of NVL-mode, and treats it correctly."
msgstr "extend は NVL モードを検知し、正常に動作します。"

#: ../../source/dialogue.rst:214
msgid "Dialogue Window Management"
msgstr "テキストウィンドウの管理"

#: ../../source/dialogue.rst:216
msgid ""
"Ren'Py includes several statements that allow for management of the dialogue "
"window. As dialogue window is always shown during dialogue, these statements "
"control the presence or absence of the window during non-dialogue "
"interactions."
msgstr ""
"Ren'Py にはテキストウィンドウを管理するためのステートメントが含まれています。"
"台詞の間、ウィンドウは常に表示されますが、台詞がない間のウィンドウの表示・非"
"表示はこれらのステートメントによって制御できます。"

#: ../../source/dialogue.rst:225
msgid "``window show``"
msgstr "``window show``"

#: ../../source/dialogue.rst:222
msgid ""
"The window show statement causes the window to be shown. It takes as an "
"argument an optional transition, which is used to show the window. If the "
"transition is omitted, :var:`config.window_show_transition` is used."
msgstr ""
"window show ステートメントは、ウィンドウが表示されるようにします。このステー"
"トメントはオプションとして表示時のトランジションを引数に取ります。トランジ"
"ションが省略された場合は、 :var:`config.window_show_transition` が使われま"
"す。"

#: ../../source/dialogue.rst:231
msgid "``window hide``"
msgstr "``window hide``"

#: ../../source/dialogue.rst:228
msgid ""
"The window hide statement causes the window to be hidden. It takes as an "
"argument an optional transition, which is used to hide the window. If the "
"transition is omitted,  :var:`config.window_hide_transition` is used."
msgstr ""
"window hide ステートメントは、ウィンドウが非表示になるようにします。このス"
"テートメントはオプションとして非表示時のトランジションを引数に取ります。トラ"
"ンジションが省略された場合は、 :var:`config.window_hide_transition` が使われ"
"ます。"

#: ../../source/dialogue.rst:239
msgid "``window auto``"
msgstr "``window auto``"

#: ../../source/dialogue.rst:234
msgid ""
"This enables automatic management of the window. The window is shown before "
"statements listed in :var:`config.window_auto_show` - by default, say "
"statements. The window is hidden before statements listed in :var:`config."
"window_auto_hide` - by default, ``scene`` and ``call screen`` statements. "
"(Only statements are considered, not statement equivalent functions.)"
msgstr ""
"これはウィンドウの自動管理を有効化させます。ウィンドウは :var:`config."
"window_auto_show` にリストアップされたステートメント (デフォルトでは say ス"
"テートメント) の前で表示され、 :var:`config.window_auto_hide` にリストアップ"
"されたステートメント (デフォルトでは ``scene``, ``call screen`` ステートメン"
"ト) の前で非表示となります。(ステートメントのみが認識され、ステートメントと等"
"価な関数はそうではありません。)"

#: ../../source/dialogue.rst:241
#, fuzzy
msgid ""
"The ``window auto`` statement uses :var:`config.window_show_transition` and :"
"var:`config.window_hide_transition` to show and hide the window, "
"respectively. ``window auto`` is cancelled by ``window show`` and ``window "
"hide``."
msgstr ""
"``window auto`` ステートメントは、ウィンドウの表示・非表示にそれぞれ :var:"
"`config.window_show_transition` と :var:`config.window_hide_transition` を使"
"います。 ``window auto`` は ``window show`` や ``window hide`` によって中断さ"
"れます。"

#: ../../source/dialogue.rst:266
msgid ""
"Dialogue window management is subject to the \"show empty window\" :func:"
"`Preference`. If the preference is disabled, the statements above have no "
"effect."
msgstr ""
"台詞ウィンドウの管理は :func:`Preference` の \"show empty window\" に影響され"
"ます。この設定が無効化されている時、上記のステートメントでは何も起こりませ"
"ん。"

#: ../../source/dialogue.rst:272
msgid "Say with Arguments"
msgstr "引数つきの say"

#: ../../source/dialogue.rst:274
msgid ""
"Additional arguments can be passed to the say statement by including them in "
"parenthesis after the say statement. For example, one can write::"
msgstr ""
"say ステートメント後に括弧で囲んで、追加の引数を say ステートメントに渡せま"
"す。"

#: ../../source/dialogue.rst:279
#, fuzzy
msgid ""
"Arguments to the say statement are first processed by var:`config."
"say_arguments_callback`, if it is not None. If any remain, they are then "
"passed to the character, which treats them as if they were present when the "
"character was defined. So, the example above displays the dialogue in green."
msgstr ""
"None が指定されなければ、 say ステートメントへの引数は最初に var:`config."
"say_arguments_callback` によって処理されます。残りがあれば character に渡さ"
"れ、そのキャラクターが定義されたときに渡されたかのように扱います。 例えば、上"
"記の例は台詞を緑に表示します。"

#: ../../source/dialogue.rst:286
msgid "Python Equivalents"
msgstr "等価な Python"

#: ../../source/dialogue.rst:290
msgid "This may only make sense if you've read the :ref:`python` section."
msgstr "これは  :ref:`python` の章を読んでいる場合のみ有意でしょう。"

#: ../../source/dialogue.rst:292
msgid ""
"When the first parameter to a say statement is present and an expression, "
"the say statement is equivalent to calling that expressing with the dialogue "
"and an `interact` argument of True. For example::"
msgstr ""
"say ステートメントへの最初の引数が存在し、式であるとき、 say ステートメントは"
"その台詞と True の `interact` 引数で呼び出されることと等価です。 例 ::"

#: ../../source/dialogue.rst:302
msgid ""
"The say statement will search the ``character`` named store before the "
"default store. If you want to have a character with the same name as a "
"variable in the default store, it can be defined using::"
msgstr ""
"say ステートメントはデフォルト store の前に ``character`` と名付けられた "
"store を探します。デフォルト store で変数名と同じキャラクターを使用したければ"
"以下のように定義できます。 ::"

#: ../../source/dialogue.rst:308
msgid ""
"This character can then be used alongside a variable in the default store::"
msgstr "このキャラクターはデフォルト store の変数と平行して使用可能です。::"

#: ../../source/dialogue.rst:317
msgid ""
"A say with arguments sees the arguments passed to the function. For example::"
msgstr "引数つきの say ステートメントは関数に渡された引数を見ます。例 ::"

#: ../../source/dialogue.rst:325
msgid "When e is a Character, this is further equivalent to::"
msgstr "e がキャラクターであるとき、これはさらに以下と等価です。 ::"

#: ../../source/dialogue.rst:329
#, fuzzy
msgid ""
"But it's possible to use var:`config.say_arguments_callback` or have ``e`` "
"wrap a character to do things differently."
msgstr ""
"しかし、 var:`config.say_arguments_callback` の使用や `e` に様々なことをする"
"キャラクターをラップさせることが可能です。"

#: ../../source/dialogue.rst:336
msgid ""
"Window management is performed by setting the :var:`_window` and :var:"
"`_window_auto` variables, and by using the following two functions:"
msgstr ""
"ウィンドウマネージャーは the :var:`_window` と :var:`_window_auto` 変数の設定"
"と以下の2つの関数によって処理されます。 :"

#~ msgid ""
#~ "Creates and returns a Character object, which controls the look and feel "
#~ "of dialogue and narration."
#~ msgstr ""
#~ "台詞やナレーションの外観を制御する、Character オブジェクトを作成して返しま"
#~ "す。"

#~ msgid "`name`"
#~ msgstr "`name`"

#~ msgid ""
#~ "If a string, the name of the character for dialogue. When `name` is "
#~ "``None``, display of the name is omitted, as for narration."
#~ msgstr ""
#~ "文字列なら、台詞で使われるこのキャラクターの名前です。 None なら、ナレー"
#~ "ションのように名前の表示は省略されます。"

#~ msgid "`kind`"
#~ msgstr "`kind`"

#~ msgid ""
#~ "The Character to base this Character off of. When used, the default value "
#~ "of any argument not supplied to this Character is the value of that "
#~ "argument supplied to `kind`. This can be used to define a template "
#~ "character, and then copy that character with changes."
#~ msgstr ""
#~ "このキャラクターの元になるキャラクターです。使われると、このキャラクターに"
#~ "与えられなかった全ての引数のデフォルト値は、 ``kind`` に与えられた引数の値"
#~ "になります。これはテンプレートキャラクターを定義してそのキャラクターを変更"
#~ "してコピーするのに使われます。"

#~ msgid ""
#~ "**Linked Image** An image tag may be associated with a Character. This "
#~ "allows a say statement involving this character to display an image with "
#~ "the tag, and also allows Ren'Py to automatically select a side image to "
#~ "show when this character speaks."
#~ msgstr ""
#~ "**関連画像** キャラクターに画像タグを関連付けられます。これにより、その"
#~ "キャラクターに関わる say ステートメントでこのタグの画像を表示したり、その"
#~ "キャラクターがしゃべるときに現れるサイドイメージを自動的に選んだりできま"
#~ "す。"

#~ msgid "`image`"
#~ msgstr "`image`"

#~ msgid "A string giving the image tag that is linked with this character."
#~ msgstr "このキャラクターに関連付けられた画像タグの文字列です。"

#~ msgid ""
#~ "**Voice Tag** If a voice tag is assign to a Character, the voice files "
#~ "that are associated with it, can be muted or played in the preference "
#~ "screen."
#~ msgstr ""
#~ "**ボイスタグ** ボイスタグが Character に与えられると、そのキャラクターに関"
#~ "連連れられたボイスファイルは設定画面でミュートまたは再生可能にできます。"

#~ msgid "`voice_tag`"
#~ msgstr "`voice_tag`"

#~ msgid ""
#~ "A String that enables the voice file associated with the Character to be "
#~ "muted or played in the 'voice' channel."
#~ msgstr ""
#~ "キャラクターに関連付けられたボイスファイルを `voice` チャンネルでミュート"
#~ "にしたり再生可能にする文字列です。"

#~ msgid ""
#~ "**Prefixes and Suffixes.** These allow a prefix and suffix to be applied "
#~ "to the name of the character, and to the text being shown. This can be "
#~ "used, for example, to add quotes before and after each line of dialogue."
#~ msgstr ""
#~ "**接頭辞と接尾辞** これを使うと、キャラクター名と表示されるテキストには、"
#~ "接頭辞や接尾辞を適用できます。これは例えば、会話文のそれぞれの行をクオート"
#~ "で囲むのに使えます。"

#~ msgid "`what_prefix`"
#~ msgstr "`what_prefix`"

#~ msgid ""
#~ "A string that is prepended to the dialogue being spoken before it is "
#~ "shown."
#~ msgstr "会話文が表示される前に前置される文字列です。"

#~ msgid "`what_suffix`"
#~ msgstr "`what_suffix`"

#~ msgid ""
#~ "A string that is appended to the dialogue being spoken before it is shown."
#~ msgstr "会話文が表示される前に後置される文字列です。"

#~ msgid "`who_prefix`"
#~ msgstr "`who_prefix`"

#~ msgid ""
#~ "A string that is prepended to the name of the character before it is "
#~ "shown."
#~ msgstr "キャラクター名が表示される前に前置される文字列です。"

#~ msgid "`who_suffix`"
#~ msgstr "`who_suffix`"

#~ msgid ""
#~ "A string that is appended to the name of the character before it is shown."
#~ msgstr "キャラクター名が表示される前に後置される文字列です。"

#~ msgid ""
#~ "**Changing Name Display.** These options help to control the display of "
#~ "the name."
#~ msgstr ""
#~ "**名前表示の変更** このオプションは、名前の表示を制御するのに役立ちます。"

#~ msgid "`dynamic`"
#~ msgstr "`dynamic`"

#~ msgid ""
#~ "If true, then `name` should be a string containing a python expression. "
#~ "That string will be evaluated before each line of dialogue, and the "
#~ "result used as the name of the character."
#~ msgstr ""
#~ "True なら、 ``name`` は Python 式を含む文字列でなければなりません。この文"
#~ "字列は、台詞のそれぞれの行の前にこの文字列が評価され、その結果がキャラク"
#~ "ター名として使われます。"

#~ msgid ""
#~ "**Controlling Interactions.** These options control if the dialogue is "
#~ "displayed, if an interaction occurs, and the mode that is entered upon "
#~ "display."
#~ msgstr ""
#~ "**インタラクションの制御** これらのオプションは、台詞が表示されるか、イン"
#~ "タラクションが行われるか、そして入ったモードが表示されるかを制御します。"

#~ msgid "`condition`"
#~ msgstr "`condition`"

#~ msgid ""
#~ "If given, this should be a string containing a python expression. If the "
#~ "expression is false, the dialogue does not occur, as if the say statement "
#~ "did not happen."
#~ msgstr ""
#~ "与えられれば、これは Python 式を含む文字列でなければなりません。この式が "
#~ "False なら、say ステートメントが起こらなかったかのように、台詞は現れませ"
#~ "ん。"

#~ msgid "`interact`"
#~ msgstr "`interact`"

#~ msgid ""
#~ "If true, the default, an interaction occurs whenever the dialogue is "
#~ "shown. If false, an interaction will not occur, and additional elements "
#~ "can be added to the screen."
#~ msgstr ""
#~ "デフォルトでは True で、台詞が表示される度にインタラクションが行われま"
#~ "す。 False の場合は、インタラクションを行わずにスクリーンに要素を追加でき"
#~ "ます。"

#, fuzzy
#~ msgid "`advance`"
#~ msgstr "``adv``"

#~ msgid "`mode`"
#~ msgstr "`mode`"

#~ msgid ""
#~ "A string giving the mode to enter when this character speaks. See the "
#~ "section on :ref:`modes <modes>` for more details."
#~ msgstr ""
#~ "このキャラクターがしゃべるときに入るモードの文字列です。詳しくは :ref:"
#~ "`modes <modes>` をご覧ください。"

#~ msgid "`callback`"
#~ msgstr "`callback`"

#~ msgid ""
#~ "A function that is called when events occur while the character is "
#~ "speaking. See the section on :ref:`character-callbacks` fore more "
#~ "information."
#~ msgstr ""
#~ "キャラクターが話している時に発生するイベントによって呼び出される関数です。"
#~ "詳細は :ref:`character-callbacks` のセクションを参照してください。"

#~ msgid ""
#~ "**Click-to-continue.** A click-to-continue indicator is displayed once "
#~ "all the text has finished displaying, to prompt the user to advance."
#~ msgstr ""
#~ "**Click-to-continue** ctc は、全てのテキストが表示された後、ユーザーに進行"
#~ "を促すために表示される標識です。"

#~ msgid "`ctc`"
#~ msgstr "`ctc`"

#~ msgid ""
#~ "A Displayable to use as the click-to-continue indicator, unless a more "
#~ "specific indicator is used."
#~ msgstr "特殊な標識が使われないときに ctc に使う Displayable です"

#~ msgid "`ctc_pause`"
#~ msgstr "`ctc_pause`"

#~ msgid ""
#~ "A Displayable to use a the click-to-continue indicator when the display "
#~ "of text is paused by the {p} or {w} text tags."
#~ msgstr ""
#~ "テキストの表示が {p} や {w} テキストタグで停止されたときに ctc に使う "
#~ "Displayable です。"

#~ msgid "`ctc_timedpause`"
#~ msgstr "`ctc_timedpause`"

#~ msgid ""
#~ "A Displayable to use a the click-to-continue indicator when the display "
#~ "of text is paused by the {p=} or {w=} text tags. When None, this takes "
#~ "its default from ctc_pause, use ``Null()`` when you want a ctc_pause but "
#~ "no ctc_timedpause."
#~ msgstr ""
#~ "テキストの表示が {p=} や {w=} テキストタグで停止されたときに ctc に使う "
#~ "Displayable です。None であれば、ctc_pause をデフォルトとするので、"
#~ "ctc_pause だけ使って ctc_timedpause は使わないときは、 ``Null()`` を使って"
#~ "ください。"

#~ msgid "`ctc_position`"
#~ msgstr "`ctc_position`"

#~ msgid ""
#~ "Controls the location of the click-to-continue indicator. If ``\"nestled"
#~ "\"``, the indicator is displayed as part of the text being shown, "
#~ "immediately after the last character. If ``\"fixed\"``, the indicator is "
#~ "added to the screen, and its position is controlled by the position style "
#~ "properties."
#~ msgstr ""
#~ "ctc の位置を制御します。「nestled」 の時、標識は表示されるテキストの一部と"
#~ "して、最後の文字の直後に表示されます。「fixed」 の場合は、標識はスクリーン"
#~ "に追加され、その位置は position スタイルプロパティーで制御されます。"

#~ msgid ""
#~ "**Screens.** The display of dialogue uses a :ref:`screen <screens>`. "
#~ "These arguments allow you to select that screen, and to provide arguments "
#~ "to it."
#~ msgstr ""
#~ "**スクリーン** 台詞の表示には :ref:`スクリーン <screens>` を使います。以下"
#~ "の引数により、スクリーンの選択、及びスクリーンへの引数の受け渡しができま"
#~ "す。"

#~ msgid "`screen`"
#~ msgstr "`screen`"

#~ msgid "The name of the screen that is used to display the dialogue."
#~ msgstr "台詞を表示するのに使われるスクリーンの名前です。"

#~ msgid ""
#~ "Keyword arguments beginning with ``show_`` have the prefix stripped off, "
#~ "and are passed to the screen as arguments. For example, the value of "
#~ "``show_myflag`` will become the value of the ``myflag`` variable in the "
#~ "screen. (The myflag variable isn't used by default, but can be used by a "
#~ "custom say screen.)"
#~ msgstr ""
#~ "``show_`` で始まるキーワード引数は、接頭辞を取り除かれ、スクリーンに引数と"
#~ "して渡されます。例えば、 ``show_myflag`` の値はスクリーンの ``myflag`` 変"
#~ "数の値になります。 (myflag 変数はでファるとでは使われませんが、カスタマイ"
#~ "ズされた say スクリーンで使用可能です。)"

#~ msgid ""
#~ "One show variable is, for historical reasons, handled by Ren'Py itself:"
#~ msgstr ""
#~ "一つの show 変数が、歴史的な理由のため、 Ren'Py 自身によって扱われます。 :"

#~ msgid "`show_layer`"
#~ msgstr "`show_layer`"

#~ msgid ""
#~ "If given, this should be a string giving the name of the layer to show "
#~ "the \"say\" screen on."
#~ msgstr ""
#~ "必要に応じて、「say」スクリーンを表示するレイヤーの名前の文字列を指定しま"
#~ "す。"

#~ msgid ""
#~ "**Styling Text and Windows.** Keyword arguments beginning with ``who_``, "
#~ "``what_``, and `window_`` have their prefix stripped, and are used to :"
#~ "ref:`style <styles>` the character name, the spoken text, and the window "
#~ "containing both, respectively."
#~ msgstr ""
#~ "**テキストとウィンドウのスタイル** ``who_``, ``what_``, および "
#~ "``window_`` で始まるキーワード引数は、接頭辞を剥ぎ取られ、それぞれキャラク"
#~ "ター名、会話テキスト、その両方を含むウィンドウの :ref:`スタイル <styles>` "
#~ "になります。"

#~ msgid ""
#~ "For example, if a character is given the keyword argument ``who_color="
#~ "\"#c8ffc8\"``, the color of the character's name is changed, in this case "
#~ "to green. ``window_background=\"frame.png\"`` sets the background of the "
#~ "window containing this character's dialogue."
#~ msgstr ""
#~ "例えば、キャラクターがキーワード引数 ``who_color=\"#c8ffc8\"`` を与えられ"
#~ "ると、キャラクター名の色が変わり、この場合は緑になります。 "
#~ "``window_background=\"frame.png\"`` で、キャラクターの台詞を含むウィンドウ"
#~ "の背景を設定します。"

#~ msgid ""
#~ "The style applied to the character name, spoken text, and window can also "
#~ "be set this way, using the `who_style`, `what_style`, and `window_style` "
#~ "arguments, respectively."
#~ msgstr ""
#~ "``who_style``, ``what_style`` , および ``window_style`` を使う方法でも、そ"
#~ "れぞれキャラクター名、台詞、ウィンドウに適用されるスタイルを設定できます。"

#~ msgid "The python equivalent of the \"window hide\" statement."
#~ msgstr " \"window hide\"  ステートメントの Python 式です。"

#~ msgid "`trans`"
#~ msgstr "`trans`"

#~ msgid ""
#~ "If False, the default window hide transition is used. If None, no "
#~ "transition is used. Otherwise, the specified transition is used."
#~ msgstr ""
#~ "False なら、デフォルトのウィンドウ非表示のトランジションが使用されます。 "
#~ "None ならトランジションは使用されません。 それ以外なら指定したトランジショ"
#~ "ンが使用されます。"

#~ msgid "The python equivalent of the \"window show\" statement."
#~ msgstr "\"window show\" の Python 式です。"

#~ msgid ""
#~ "If False, the default window show transition is used. If None, no "
#~ "transition is used. Otherwise, the specified transition is used."
#~ msgstr ""
#~ "False なら、デフォルトのウィンドウ表示のトランジションが使用されます。 "
#~ "None ならトランジションは使用されません。 それ以外なら指定したトランジショ"
#~ "ンが使用されます。"

#~ msgid ""
#~ "Some useful ``show_`` variables implemented by the default screens are:"
#~ msgstr ""
#~ "便利な ``show_`` 変数がデフォルトのスクリーンによって定義されています:"

#~ msgid "`show_side_image`"
#~ msgstr "`show_side_image`"

#~ msgid ""
#~ "When given a Displayable, shows that displayable when the dialogue is "
#~ "shown. The position of that displayable is controlled by its position "
#~ "properties. This is often used to show an image of the speaking character "
#~ "to the side of the dialogue."
#~ msgstr ""
#~ "Displayable が与えられると、台詞が表示されるときにその displayable が表示"
#~ "されます。displayable の位置は、位置プロパティーで制御されます。これは主"
#~ "に、しゃべっているキャラクターを台詞の横に表示するのに使われます。"

#~ msgid "`show_two_window`"
#~ msgstr "`show_two_window`"

#~ msgid ""
#~ "If true, restructures the layout so that the name of the character is "
#~ "placed in one window, and the dialogue text in a second window."
#~ msgstr ""
#~ "True なら、レイアウトの構成を変更し、キャラクター名が一つのウィンドウに、"
#~ "台詞がもう一つのウィンドウに表示されるようにします。"

#~ msgid "For example, the code::"
#~ msgstr "例えば、このコード::"

#~ msgid ""
#~ "A String that enables the voice file assosiated with the Character to be "
#~ "muted or played in the 'voice' channel."
#~ msgstr ""
#~ "キャラクターに関連付けられたボイスファイルを `voice` チャンネルでミュート"
#~ "にするか再生可能にする文字列です。"

#~ msgid ""
#~ "The final form consists of a string and a with clause which has a "
#~ "transition. In this case, the string is shown and a screen is shaked at "
#~ "the same time."
#~ msgstr ""
#~ "最後の形式は文字列とトランジション付きの with 節で出来ており、文字列の表示"
#~ "とスクリーンの揺れが同時に起こります。"
