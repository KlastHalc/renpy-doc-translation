# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2016, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 6.99.12\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2016-09-19 15:35+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/cds.rst:5
msgid "Creator-Defined Statements"
msgstr ""

#: ../../source/cds.rst:7
msgid "Creator-defined statements allow you to add your own statements to Ren'Py. This makes it possible to add things that are not supported by the current syntax of Ren'Py."
msgstr ""

#: ../../source/cds.rst:11
msgid "Creator-defined statements must be defined in a python early block. What's more, the filename containing the user-defined statement must be be loaded earlier than any file that uses it. Since Ren'Py loads files in unicode sort order, it generally makes sense to prefix the name of any file containing a user-defined statement with 01, or some other small number."
msgstr ""

#: ../../source/cds.rst:17
msgid "A user-defined statement cannot be used in the file in which it is defined."
msgstr ""

#: ../../source/cds.rst:19
msgid "Creator-defined statement are registered using the renpy.register_statement function."
msgstr ""

#: ../../source/inc/statement_register:5
msgid "This registers a user-defined statement."
msgstr ""

#: ../../source/inc/statement_register:10
msgid "`name`"
msgstr ""

#: ../../source/inc/statement_register:8
msgid "This is either a space-separated list of names that begin the statement, or the empty string to define a new default statement (the default statement will replace the say statement)."
msgstr ""

#: ../../source/inc/statement_register:15
msgid "`parse`"
msgstr ""

#: ../../source/inc/statement_register:13
msgid "This is a function that takes a Lexer object. This function should parse the statement, and return an object. This object is passed as an argument to all the other functions. The lexer argument has the following methods:"
msgstr ""

#: ../../source/inc/statement_register:19
msgid "`lint`"
msgstr ""

#: ../../source/inc/statement_register:18
msgid "This is called to check the statement. It is passed a single object, the argument returned from parse. It should call renpy.error to report errors."
msgstr ""

#: ../../source/inc/statement_register:23
msgid "`execute`"
msgstr ""

#: ../../source/inc/statement_register:22
msgid "This is a function that is called when the statement executes. It is passed a single object, the argument returned from parse."
msgstr ""

#: ../../source/inc/statement_register:28
msgid "`predict`"
msgstr ""

#: ../../source/inc/statement_register:26
msgid "This is a function that is called to predict the images used by the statement. It is passed a single object, the argument returned from parse. It should return a list of displayables used by the statement."
msgstr ""

#: ../../source/inc/statement_register:33
msgid "`next`"
msgstr ""

#: ../../source/inc/statement_register:31
msgid "This is called to determine the next statement. It is passed a single object, the argument returned from parse. It should either return a label, or return None if execution should continue to the next statement."
msgstr ""

#: ../../source/inc/statement_register:36
msgid "`scry`"
msgstr ""

#: ../../source/inc/statement_register:36
msgid "Used internally by Ren'Py."
msgstr ""

#: ../../source/inc/statement_register:39
msgid "`block`"
msgstr ""

#: ../../source/inc/statement_register:39
msgid "True if this takes a block, false otherwise."
msgstr ""

#: ../../source/inc/statement_register:43
msgid "`init`"
msgstr ""

#: ../../source/inc/statement_register:42
msgid "True if this statement should be run at init-time. (If the statement is not already inside an init block, it's automatically placed inside an init 0 block.)"
msgstr ""

#: ../../source/cds.rst:24
msgid "The parse method takes a Lexer object:"
msgstr ""

#: ../../source/cds.rst:30
msgid "True if the lexer is at the end of the line."
msgstr ""

#: ../../source/cds.rst:34
msgid "Matches an arbitrary regexp string."
msgstr ""

#: ../../source/cds.rst:36
msgid "All of the statements in the lexer that match things are implemented in terms of this function. They first skip whitespace, then attempt to match against the line. If the match succeeds, the matched text is returned. Otherwise, None is returned."
msgstr ""

#: ../../source/cds.rst:43
msgid "Matches `s` as a keyword."
msgstr ""

#: ../../source/cds.rst:47
msgid "Matches a name. This does not match built-in keywords."
msgstr ""

#: ../../source/cds.rst:51
msgid "Matches any word, including keywords. Returns the text of the matched word."
msgstr ""

#: ../../source/cds.rst:56
msgid "Matches a Ren'Py string."
msgstr ""

#: ../../source/cds.rst:60
msgid "Matches an integer, returns a string containing the integer."
msgstr ""

#: ../../source/cds.rst:64
msgid "Matches a floating point number, returns a string containing the floating point number."
msgstr ""

#: ../../source/cds.rst:69
msgid "Matches a simple python expression, returns it as a string."
msgstr ""

#: ../../source/cds.rst:73
msgid "Skips whitespace, the returns the rest of the line."
msgstr ""

#: ../../source/cds.rst:77
msgid "Returns an opaque object representing the current state of the lexer."
msgstr ""

#: ../../source/cds.rst:81
msgid "When `o` is the object returned from checkpoint(), reverts the state of the lexer to what it was when checkpoint() was called. (This is used for backtracking.)"
msgstr ""

#: ../../source/cds.rst:87
msgid "Return a Lexer for the block associated with the current line."
msgstr ""

#: ../../source/cds.rst:91
msgid "In a subblock lexer, advances to the next line. This must be called before the first line, so the first line can be parsed."
msgstr ""

#: ../../source/cds.rst:96
msgid "Lint Utility Functions"
msgstr ""

#: ../../source/cds.rst:98
msgid "These functions are useful in writing lint functions."
msgstr ""

#: ../../source/inc/lint:5
msgid "Checks the text tags in s for correctness. Returns an error string if there is an error, or None if there is no error."
msgstr ""

#: ../../source/cds.rst:103
msgid "Example"
msgstr ""

#: ../../source/cds.rst:105
msgid "This creates a new statement \"line\" that allows lines of text to be specified without quotes. ::"
msgstr ""

#: ../../source/cds.rst:132
msgid "This can be used by writing::"
msgstr ""

