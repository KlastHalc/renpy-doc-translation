# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2012-2017, Tom Rothamel
# This file is distributed under the same license as the Ren'Py Visual Novel Engine package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Ren'Py Visual Novel Engine 6.99.13\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-08-04 18:15+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/android-packaging.rst:9
msgid "Building Android Applications"
msgstr ""

#: ../../source/android-packaging.rst:12
msgid "Ren'Py contains tools that help you take a packaging-centric approach to Android game development. In this approach, you will use a PC to build an Android package and upload it to your device. You can then run the game like any Android application. When it works correctly, you can upload the package you make to Google Play and other app stores."
msgstr ""

#: ../../source/android-packaging.rst:19
msgid "Building an Android application consists of four steps:"
msgstr ""

#: ../../source/android-packaging.rst:21
msgid "Download and install the Java Development Kit and Android USB Drivers (scroll down for links)."
msgstr ""

#: ../../source/android-packaging.rst:24
msgid "Use the launcher to install the Android SDK and create keys."
msgstr ""

#: ../../source/android-packaging.rst:26
msgid "Use the launcher to configure the Android build."
msgstr ""

#: ../../source/android-packaging.rst:28
msgid "Use the launcher to build the Android application."
msgstr ""

#: ../../source/android-packaging.rst:30
msgid "Once you've finished these steps, you'll have a runnable Android package. You'll only need to run step 3 when you decide to make changes to your game's configuration or when configuring a new game entirely; you'll run step 4 most often, whenever you need to make a new build of your game."
msgstr ""

#: ../../source/android-packaging.rst:37
msgid "Step 1: Installing the Dependencies"
msgstr ""

#: ../../source/android-packaging.rst:39
msgid "There are three things you may need to manually download and install before you can build packages:"
msgstr ""

#: ../../source/android-packaging.rst:42
msgid "**Java Development Kit.** The Java Development Kit (JDK) contains several tools that are used by |PGS4A|, including the tools used to generate keys and sign packages. It can be downloaded from:"
msgstr ""

#: ../../source/android-packaging.rst:47
msgid "http://www.oracle.com/technetwork/java/javase/downloads/index.html"
msgstr ""

#: ../../source/android-packaging.rst:49
msgid "Please note that the developer-focused JDK is different from the user-focused JRE, and you'll need the JDK to create Android packages."
msgstr ""

#: ../../source/android-packaging.rst:53
msgid "**Android Device Drivers.** On Windows, you may want to install a device driver to access your device, although this is not necessary. Links to android device drivers can be found at:"
msgstr ""

#: ../../source/android-packaging.rst:57
msgid "http://developer.android.com/sdk/oem-usb.html"
msgstr ""

#: ../../source/android-packaging.rst:59
msgid "On Linux or OS X, you won't need a device driver. If you can't access your device, you may need to read:"
msgstr ""

#: ../../source/android-packaging.rst:62
msgid "http://developer.android.com/guide/developing/device.html#setting-up"
msgstr ""

#: ../../source/android-packaging.rst:64
msgid "However, modern versions of Linux and OS X should just work."
msgstr ""

#: ../../source/android-packaging.rst:68
msgid "Step 2: Set up the Android SDK and Development Environment"
msgstr ""

#: ../../source/android-packaging.rst:70
msgid "The next step is to set up the Android SDK and the rest of your development environment. This step will:"
msgstr ""

#: ../../source/android-packaging.rst:73
msgid "Check that the JDK is installed properly."
msgstr ""

#: ../../source/android-packaging.rst:74
msgid "Install Apache Ant."
msgstr ""

#: ../../source/android-packaging.rst:75
msgid "Install the Android SDK."
msgstr ""

#: ../../source/android-packaging.rst:76
msgid "Use the Android SDK to install the appropriate development packages."
msgstr ""

#: ../../source/android-packaging.rst:78
msgid "Create a signing key that will be used to sign packages that are placed on the market (android.keystore: this will be generated in the RAPT directory)."
msgstr ""

#: ../../source/android-packaging.rst:82
msgid "This step requires Internet access."
msgstr ""

#: ../../source/android-packaging.rst:84
msgid "To perform this step, choose \"Install SDK & Create Keys\" from the Android screen in the Ren'Py Launcher."
msgstr ""

#: ../../source/android-packaging.rst:87
msgid "RAPT will report on what it's doing. It will also prompt you with warnings about licenses, and ask if you want it to generate a key."
msgstr ""

#: ../../source/android-packaging.rst:92
msgid "The key generated by RAPT is created with a standard passphrase. You should really use keytool to generate your own signing keys."
msgstr ""

#: ../../source/android-packaging.rst:96
msgid "http://docs.oracle.com/javase/7/docs/technotes/tools/windows/keytool.html"
msgstr ""

#: ../../source/android-packaging.rst:98
msgid "At the very least, you should keep the android.keystore file in a safe place. You should also back it up, because without the key, you won't be able to upload the generated applications."
msgstr ""

#: ../../source/android-packaging.rst:104
msgid "Step 3: Configure Your Game"
msgstr ""

#: ../../source/android-packaging.rst:106
msgid "Before building a package, you must give Ren'Py some information about the Android build of your game. To do this, choose \"Configure\" from the Android screen of the Ren'Py launcher."
msgstr ""

#: ../../source/android-packaging.rst:110
msgid "If you need to change the information - for example, if you release a new version of your game - you can re-run the configure command. Your previous choices will be remembered."
msgstr ""

#: ../../source/android-packaging.rst:115
msgid "Step 4: Build and Install the Package"
msgstr ""

#: ../../source/android-packaging.rst:117
msgid "Finally, you can build and install the package. This is done with a by connecting your Android device to your computer, and choosing \"Build & Install\" from the Android screen of the Ren'Py launcher. (The first time you install, your Android device may ask you to authorize your computer to install applications.)"
msgstr ""

#: ../../source/android-packaging.rst:123
msgid "If you'd rather copy the game's apk file to your Android device manually, choose \"Build Package\" from the Android screen of the Ren'Py launcher. Then navigate to the 'bin' directory underneath the RAPT directory and copy the file mygame-release.apk into your Android Device. You will then need to find the .apk file in your Android device using a file manager application and open it to install the game."
msgstr ""

#: ../../source/android-packaging.rst:133
msgid "Viewing Debug Output"
msgstr ""

#: ../../source/android-packaging.rst:135
msgid "Debug output can be found by running the adb command manually from the terminal. After installing the SDK, the adb command can be found as `rapt-dir`/android-sdk/platform-tools/adb. (On Windows, use adb.exe.)"
msgstr ""

#: ../../source/android-packaging.rst:140
msgid "To view output from Ren'Py, consider a command line like:"
msgstr ""

#: ../../source/android-packaging.rst:142
msgid "adb logcat -s python:*"
msgstr ""

#: ../../source/android-packaging.rst:145
msgid "Icon and Presplash Images"
msgstr ""

#: ../../source/android-packaging.rst:147
msgid "There are several special files that are used to set the icon and presplash images used by the package. These files should be placed in the base directory."
msgstr ""

#: ../../source/android-packaging.rst:154
msgid "android-icon.png"
msgstr ""

#: ../../source/android-packaging.rst:152
msgid "The icon that's used for the app in the Android launcher. This icon is automatically scaled down to the appropriate size, and should be larger that 144x144."
msgstr ""

#: ../../source/android-packaging.rst:165
msgid "android-`density`-icon.png"
msgstr ""

#: ../../source/android-packaging.rst:157
msgid "If present, these are used in preference to android-icon.png for screens of the given densities. This allows for pixel-perfect icons. Available screen densities and the corresponding icon sizes are:"
msgstr ""

#: ../../source/android-packaging.rst:161
msgid "ldpi (36x36)"
msgstr ""

#: ../../source/android-packaging.rst:162
msgid "mdpi (48x48)"
msgstr ""

#: ../../source/android-packaging.rst:163
msgid "hdpi (72x72)"
msgstr ""

#: ../../source/android-packaging.rst:164
msgid "xhdpi (96x96)"
msgstr ""

#: ../../source/android-packaging.rst:165
msgid "xxhdpi (144x144)"
msgstr ""

#: ../../source/android-packaging.rst:169
msgid "android-presplash.jpg"
msgstr ""

#: ../../source/android-packaging.rst:168
msgid "The image that's used when the app is loading. This should be surrounded by a monocolored border. That border is expanded to fill the screen."
msgstr ""

#: ../../source/android-packaging.rst:173
msgid "ouya-icon.png"
msgstr ""

#: ../../source/android-packaging.rst:172
msgid "A 732x412 icon that's used on the OUYA console."
msgstr ""

#: ../../source/android-packaging.rst:178
msgid "Google Play Expansion APKs"
msgstr ""

#: ../../source/android-packaging.rst:180
msgid "Ren'Py optionally supports the use of expansion APKs when used on a device supporting Google Play. Expansion APKs allow Google Play to host games larger than 50MB in size. Please see:"
msgstr ""

#: ../../source/android-packaging.rst:184
msgid "http://developer.android.com/google/play/expansion-files.html"
msgstr ""

#: ../../source/android-packaging.rst:186
msgid "For information about expansion APKs work. Right now, only the main expansion APK is supported, giving a 2GB limit. When an Expansion APK is created, all game files will be placed in the expansion APK. Ren'Py will transparently use these files."
msgstr ""

#: ../../source/android-packaging.rst:191
msgid "To configure your game to use Expansion APKs, you'll need to set two variables:"
msgstr ""

#: ../../source/android-packaging.rst:196
msgid "This is the Google Play license key associated with your application, which can be found on the \"Services & APIs\" tab associated with your application in the Google Play developer console. (Be sure to remove all spaces and newlines from the key.)"
msgstr ""

#: ../../source/android-packaging.rst:203
msgid "This should be a tuple of 20 bytes, where each byte is represented as an integer between -128 and 127. This is used to encrypt license information returned from Google Play."
msgstr ""

#: ../../source/android-packaging.rst:207
msgid "A valid (if insecure) value for this variable is::"
msgstr ""

#: ../../source/android-packaging.rst:211
msgid "RAPT will place the expansion APK on the device when installing the APK package on the device. The expansion APK will be an .obb file found inside the bin subdirectory of the RAPT directory."
msgstr ""

#: ../../source/android-packaging.rst:215
msgid "In normal operation, Google Play will place the expansion APK on the device automatically when the user installs the application."
msgstr ""

